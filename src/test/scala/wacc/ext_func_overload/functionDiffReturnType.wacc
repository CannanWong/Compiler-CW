# Extension: fuunction overloading
# Same function name with different type of parameters

# Output:
# 0
# a
# true
# abc
# cba
# 1
# 2
#

# Program:

begin
  int f() is
    return 0
  end
  char f() is
    return 'a'
  end
  bool f() is
    return true
  end
  string f() is
    return "abc"
  end
  char[] f() is
    char [] a = ['c','b','a'] ;
    return a
  end
  pair(int, int) f() is
    pair(int, int) a = newpair(1, 2) ;
    return a
  end
  int a = call f() ;
  char b = call f() ;
  bool c = call f() ;
  string d = call f() ;
  char[] e = call f() ;
  pair(int, int) f = call f() ;
  int g = fst f ;
  int h = snd f ;
  println a ;
  println b ;
  println c ;
  println d ;
  println e ;
  println g ;
  println h 
end
